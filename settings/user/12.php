<?php $config_hash = "";